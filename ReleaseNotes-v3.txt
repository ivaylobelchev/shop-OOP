В този release:

1)	Оправих голямата четворка навсякъде (не бях я писал на някои места, защото бях преценил, че не е нужна на тези места).

2)	Направих наследяването да е като видът продукт наследява класа Product, а не на обратно, защото така се пести повече място. Заедно с това се наложи да преместя price в класа Product, защото иначе нямаше как да имам getPrice(). 
	Също така се затруднява слагането на общ масив, който да съдържа различни видове продукти в един масив.

3)	Направих template, който да действа като масив (Vector).
	Този масив прави различни product number-и при вкарването на продукти вътре, защото продуктите са направени така, че да нямат повтарящи се номера. Когато един номер е даден в изпълнението на програмата, той не се повтаря повече.

4)	В Login може да се въвеждат потребители чрез въвеждането им само в кода.
	Добавени полезни функции в Login.
	Admin наследява Login.
	Оправен memory leak и оптимизирано пазене на username и парола в Login.

5)	Оправих Basket да е с динамична памет.

6)	Написах примерни phoneCatalogue и LaptopCatalogue в main.cpp. Функциите printModel() извеждат всички продукти, отговарящи на името, наподобявайки търсачка.

7)	Каквото и да пипна по връзването на файловете получавам грешка с LNK2005... Не мога да специализирам функции от VectorTemplate.hpp за Basket и Login поради тази причина.

8)	Моята имплементация на Vector поддържа и Login само че поради горната причина няма смисъл от нея. В моя случай template-ните функции усложняват многократно писането на код, което е в контраст с целта им. Бих могъл имплементирам LoginDatabase правилно само ако не е template.
	Бих могъл да се опитам да имплементирам всичко в едно програма, ако за следващото домашно за практикума имаме да направим всичко да върви като финална версия за използване от терминала.

Надявам се в оценяването на това домашно се отчете и работата ми по проблемите от миналите пъти освен имплементацията на template.

// Където има коментирани парчета код в main.cpp, не означава да не се проверяват.